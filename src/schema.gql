# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ConversationModel {
  id: ID!
  status: ConversationStatus!
  title: String
  users: [String!]!
  threadId: String!
  agentId: String!
  metadata: String
  createdAt: DateTime!
  updatedAt: DateTime
  scheduleTaskCount: Float!
}

enum ConversationStatus {
  CHAT
  HINT
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""消息补丁"""
type PatchItem {
  path: String!
  action: PatchMessageContentActionType!
  value: JSON!
}

enum PatchMessageContentActionType {
  APPEND
  REPLACE
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type WorkflowGroup {
  title: String!
  workflows: [String!]!
}

type Message {
  id: String!
  conversationId: String!
  role: MessageRoleType!

  """创建者ID"""
  userId: String

  """创建者(未登录用户)ID"""
  visitorId: String

  """消息类型"""
  type: MessageTypeKeys!

  """消息内容"""
  content: MessageContentUnion

  """消息元数据"""
  metadata: JSON

  """创建时间"""
  createdAt: DateTime!

  """更新时间"""
  updatedAt: DateTime
}

enum MessageRoleType {
  SYSTEM
  USER
}

enum MessageTypeKeys {
  PATCH
  TEXT
  PROCESS
  WORKFLOW_GROUP
}

union MessageContentUnion = PatchMessageContent | TextMessageContent | ProcessMessageContent | WorkflowGroupMessageContent

"""该消息类型用于给指定消息打补丁"""
type PatchMessageContent {
  """消息类型"""
  type: MessageTypeKeys!

  """是否已经处理"""
  done: Boolean
  patches: [PatchItem!]!
}

type TextMessageContent {
  """消息类型"""
  type: MessageTypeKeys!

  """是否已经处理"""
  done: Boolean
  text: String!
}

type ProcessMessageContent {
  """消息类型"""
  type: MessageTypeKeys!

  """是否已经处理"""
  done: Boolean
  processId: String!
  workflowId: String!
  status: ProcessStatusEnum!
  thumbsUp: Boolean
  thumbsDown: Boolean
}

"""流程执行状态"""
enum ProcessStatusEnum {
  """规划中"""
  Planning

  """等待中"""
  Waiting

  """队列中"""
  Queueing

  """执行中"""
  Executing

  """失败"""
  Failed

  """完成"""
  Completed

  """暂停"""
  Pause

  """取消"""
  Discard

  """超时"""
  TimeOut
}

type WorkflowGroupMessageContent {
  """消息类型"""
  type: MessageTypeKeys!

  """是否已经处理"""
  done: Boolean
  groups: [WorkflowGroup!]!
}

type Query {
  conversation(id: String!): ConversationModel!
  getHello: Message!
}

type Mutation {
  createConversation(input: CreateConversationInput!, user: String!): ConversationModel!
  removeConversation(id: String!, user: String!, permanent: Boolean): Boolean!
  modifyConversation(input: ModifyConversationInput!, user: String!): ConversationModel!

  """对话"""
  chatInput(conversationId: String!, user: String!, content: String!): Boolean
}

input CreateConversationInput {
  title: String!
  agentId: String!
  metadata: JSON
}

input ModifyConversationInput {
  id: ID!
  title: String!
  metadata: JSON
}

type Subscription {
  messages: Message!
}